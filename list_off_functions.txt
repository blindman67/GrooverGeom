Some functions are missing from this list


    Geom {
        extensions : null,
        safePrimitiveArray : true, 
        defaultPrecision : 4, 
        lineFeedDefault : "<br>",
        setDefaultLineFeed(str)
        setDefaultPrecision(value)
        init()
        isEmpty(obj)
        validatePrimitive(obj)
        isPrimitive(obj)
        isType(prim,type)
        createFromSimple(obj)
        getDetails() 
    }
    Empty {         
        type : "Empty",
        copy() 
        asBox(box)
        setAs() 
        isEmpty()
    },
    PrimitiveArray {
        primitives : [],
        type : "PrimitiveArray",
        length : 0,
        current : undefined,
        toString(precision,lineFeed)  
        hasId(id)        
        push(primitive)
        pushUnsafe(primitive)
        pushI(primitive)
        pushIUnsafe(primitive)
        clear()  
        reset()
        empty()        
        isEmpty()
        normalise()
        transform(transform)
        asSimple(obj)        
        fromSimple(obj)
        replace(id, prim)
        asBox(box)        
        asVecArray(vecArray, instance)       
        eachAs(type,callback,dir,start)  
        each(callback,dir,start)  
        first()
        next()
        previouse()        
        last()
        firstAs(type)
        nextAs(type)
        previouseAs(type)        
        lastAs(type)        
        getById(id)
        getClosestIndexToVec(vec,type)
        getClosestPrimitiveToVec(vec,type)        
        collectIdsAsPrimitiveArray(ids,primArray)
        getAllIdsAsArray(array)
        isIdInArray(id,all,shallow)        
    }
    VecArray  {
        vecs : [],
        items : undefined,
        type :"VecArray",
        current : undefined,
        length : 0,
        hasId(id) 
        each(callback,dir,start = 0)
        cull(callback)
        toString(precision, lineFeed)
        lerp(from,dest,amount)
        clear()
        reset()
        empty()        
        isEmpty()
        normalise()
        asSimple(obj)        
        fromSimple(obj)
        setLength(len)
        reverse()
        remove(index)
        removeById(id)        
        isIdInArray(id,all)
        getVecById(id,index)
        getAllIdsAsArray(array)
        getHash()
        getById(id)
        copy(from, to)
        setAs(vecArray),
        isEmpty()
        push(vec)
        pushI(vec)
        append(vecArray)
        asBox(box)
        mult(number)
        add(vec)
        sum()
        mean()
        rotate(number)
        findClosestIndex(vec, limit, rectangular)
        findClosest(vec,limit = Infinity, rectangular = false)
        findInsideBox(box, vecArray, invVecArray)
        getLast()
        last()
        first()
        next()
        previouse()
        remaining()
        getCount()
        sumCross()
        area()        
        perimiter()
        indexOf(vec, start)
    }
    Triangle {
        p1 : undefined,
        p2 : undefined,
        p3 : undefined,
        type : "Triangle",
        copy()
        asBox(box)
        hasId(id)
        isEmpty()
        empty()
        toString(precision)
        getHash()
        replace(id, prim)
        area()
        perimiter()
        semiperimiter()
        distFrom(vec)
        snapTo(xGrid, yGrid, rule)
        lerp(from, dest, amount)        
        asVecArray(vecArray, instance)        
        asLines(array)
        asBoundingCircle(circle) 
        asCircle(circle)
        asRectangle(sideIndex,retRect) 
        asArc(arc)        
        asInnerCircle(circle)
        asSimple(obj)
        fromSimple(obj) 
        lines()
        angles(array)
        getSideBisectorAsLine(line, sideIndex)        
        getCornerBisectorAsLine(line, cornerIndex)
        getSideBisectedAngleIntercept(retVec,cornerIndex)    
        centerByBisectingAngles(retVec)        
        center(retVec)
        sumCross()
        isVecInside(vec)
        isLineInside(line)
        isCircleInside(circle)
        isArcInside(arc)
        isRectangleInside(rectangle)
        isBoxInside(box)
        isTriangleInside(triangle)
        isLineTouching(line)
        isCircleTouching(circle)
        isArcTouching(arc)
        isBoxTouching(box)
        isRectangleTouching(rectangle)
        isTriangleTouching(triangle)
        isClockwise()
        isRight()
        isOblique()
        isDegenerate()
        isObtuse()
        isAcute()
        isEquilateral()
        isIsosceles()
        isScalene()
        description()
        isInside(primitive)
        sliceLineRemove(line,triArray)
        sliceLine(line)
        slice(obj)
        unitDistOfClosestPoint(vec)
        unitAlong( unitDist , rVec)
        circumcenter(vec)
        meanCenter(vec)
        isSimilar(triangle)
        reverse(swap)
        makeClockwise(swap)
        lengthAllQuick2()
        lengthAllQuick()
        distFromAll(vec,array)
        lengthAll(array)
        angleAll(array)      
        longestLength()
        shortestLength()
        inflate(amount)
        setAs(triangle)
        scale(scale)
        translate(vec)
        rotate(rotation)
        transform(transform)
    },
    Vec {
        x : 1,
        y : 0,
        _leng : null,  
        _dir : null,  
        type : "Vec",
        copy() 
        asSimple(obj  = {}) 
        fromSimple(obj)        
        toString(precision)        
        getHash()
        setAs(vec,num) 
        hasId(id) 
        getAllIdsAsArray(array  = []) 
        asVecArray(vecArray  =  new VecArray(), instance = false) 
        asBox(box = new Box())
        isEmpty()
        isZero()
        empty()
        isSame(vec) 
        isSameE(vec)
        lerp(from, dest,amount)
        vectorToPolar()
        polarToVector()
        add(vec)
        addLeng(length)
        sub(vec)
        mult(number)
        div(number)
        rev() 
        r90()
        rN90()
        r180()
        fromPolar(dir, distance) 
        addPolar(dir, distance) 
        half()
        setLeng(number)  
        setDistFrom(distance,vec) 
        setDir(radians) 
        rotate(radians) 
        magnitude()   
        leng() 
        leng2()
        dir() 
        mid() 
        norm() 
        dot(vec)   
        dotUnit(vec)  
        cross(vec)  
        crossUnit(vec)   
        dotNorm(vec) 
        crossNorm(vec) 
        angleBetween(vec) 
        distFrom(vec) 
        distTo(vec) 
        distAlongNorm(vec) 
        angleTo(vec)  
        scale(scale)
        interceptX(X)
        interceptY(Y)  
        
        translate(vec)
        transform(transform)
    }
    Arc {
        circle : undefined,
        start : 0,
        end : 0,
        direction : undefined, 
        type : "Arc",
        copy()
        setAs(arc)
        hasId(id)
        distFrom(vec) 
        asBox(box  = new Box())
        asVecArray(vecArray, instance)
        isEmpty()
        empty()
        isZero()
        toString(precision)
        getHash()
        replace(id, prim)  
        asCircle()
        asTriangles(sides,sector,array)
        asSimple(obj)
        fromSimple(obj) 
        lerp(from, dest, amount)         
        sweap()
        arcLength()
        fromCircleIntercept(circle)
        areaOfSector()
        areaOfSegment()
        normaliseDirection() 
        fromVec3(vec1, vec2, vec3) 
        fromTriangle(triangle)    
        fromTangentAt(where, tangentVec) 
        fitToCircles(cir1,cir2,rule)
        swap(direction) 
        reverse()        
        fromPoints(p1,p2,p3)
        setRadius(number)
        addToRadius( number )
        multiplyRadius( number )
        setCenter(vec)  
        setCircle(circle)
        normalise() 
        towards(vec)
        away(vec) 
        endsAsVec(vecArray, vecEnd)  
        startAsVec(vec) 
        endAsVec(vec) 
        unitPosAsVec(unit,vec) 
        unitAlong(unit,vec)
        unitDistOfClosestPoint(vec) 
        tangentAtStart(retLine)
        tangentAtEnd(retLine) 
        startFromVec(vec)
        endFromVec(vec) 
        endsFromVecs(vec1, vec2)
        isAngleToPointBetween(point) 
        interceptLineSeg(line,retV1,retV2) 
        sweapLeng()
        setCircumference(leng)
        cordLeng()
        cordAsLine(retLine)
        clockwise()
        anticlockwise()
        great()
        minor()
        isPointOn(p)
        fromTangentsToPoint(vec)
        fitCircleToLine(arcCircle,line,left = true, outside = true)  
        fitCircleToCircles(arcCircle1,arcCircle2, left = true) 
        getTangentsToCircle(arcCircle,retLineR,retLineL) 
        fitCornerConstrain(line1,line2,cornerUnknown,constraint,data)
        fitCorner(line1,line2,cornerUnknown) 
        scale(scale)
        translate(vec)
        rotate(rotation)
        transform(transform) 
    }
    Circle {
        center : undefined,
        radius : 0,
        type : "Circle",
        copy()
        setAs(circle)
        asVecArray(vecArray, instance)
        hasId(id)
        asBox(box)     
        toString(precision)
        asSimple(obj) 
        fromSimple(obj)
        getHash() 
        replace(id, prim)
        asTriangles(sides,array)
        lerp(from, dest, amount)        
        isEmpty()  
        empty()
        setRadius(r)
        addToRadius( number )
        multiplyRadius( number )
        circumference()
        area()
        fromLine(line)
        fromVec2(vec1, vec2, method)
        fromVec3(vec1, vec2, vec3)
        fromArea(area)
        fromTriangle(triangle)
        fromCircumference (leng)
        isTouching(circle)
        isTouchingLine(line) 
        isLineTouching(line)
        isRectangleInside(rectangle) 
        isCircleInside(circle)
        isLineInside(line) 
        isVecInside(vec)        
        isPointInside(vec)
        unitAlong( unitDist , rVec)
        unitDistOfClosestPoint(vec) 
        distFrom(vec)
        fitToCircles(circle1, circle2, rule) 
        closestPoint(vec,retVec)
        closestPointToLine(line,retVec) 
        closestPointToVec(vec,retVec)
        clipLine(line,retLine) 
        interceptLineSeg(line, retLine)
        interceptLine(line, retLine)
        interceptLineSelect(line,which,limit, retVec)
        intercept(circle) 
        tangentLineAtVec(vec,retLine )
        tangentAtAngle(angle,retLine)
        tangentsPointsForPoint(vec)  
        getTangentsToCircle(circle,retLineR,retLineL) 
        fitCircleToLine(circle,line,left = true,outside = true)  
        reflectLine(line)
        fitCornerConstrain(line1,line2,cornerUnknown,constraint,data) 
        fitCorner(line1,line2,cornerUnknown)    
        scale(scale)
        translate(vec)
        rotate(rotation)
        transform(transform)         
    }
    Line {
        p1 : undefined,
        p2 : undefined,
        type : "Line",      
        _leng : null,
        _dir : null,        
        copy()
        setAs(line)
        setEnds(vec1, vec2)
        hasId(id)
        getAllIdsAsArray(array)
        asSimple(obj) 
        fromSimple(obj)        
        isEmpty() 
        empty()
        isZero() 
        toString(precision)
        getHash() 
        replace(id, prim)
        swap()
        reverse()
        lerp(from, dest, amount)
        asVec(vec)
        asVecArray(vecArray, instance)
        asBox(box)
        asCircle(circle) 
        asRectangle(height,rect)
        isVecLeft(vec) 
        isLineLeft(line)
        isCircleLeft(circle) 
        isVecWithinSeg(vec)
        isVecOnSeg(vec, threshold) 
        isLineOnLine(line,threshold)
        isLineParallelToLine(line,threshold) 
        isLineOnSeg(line,threshold)
        isLineInSeg(line,threshold) 
        leng()
        leng2() 
        dir()
        norm(rVec) 
        normDir()
        extend(percentage)  
        setLeng(len)
        setDir(num)
        cross()
        crossBack()
        crossLine(line)
        crossLineNorm(line)  
        mult(num)
        add(vec)
        midPoint(rVec)
        unitAlong( unitDist , rVec) 
        distanceAlong( dist, rVec) 
        distAlong( dist, rVec) 
        angleBetween(line)
        angleFromNormal(line)       
        setTransformToLine(ctx)       
        sliceOffEnd( line )
        sliceOffStart( line )
        sliceToPoints(p1,p2)
        intercept(line,rVec)  
        interceptSeg(line,rVec)
        interceptSegs(line,rVec) 
        isLineSegIntercepting(line)       
        distFrom(point)   
        distFromPoint(point)        
        distFromDir(point) 
        distFromPointDir(point)
        lineToVec(vec, rLine)  
        getDistOfPoint(vec)
        getUnitDistOfPoint(vec) 
        getDistOfPointSafe(vec)
        getUnitDistOfPointSafe(vec) 
        unitDistOfClosestPoint(vec)
        closestPoint(vec, rVec) 
        closestPointOnSeg(vec, rVec)
        reflect(l)  
        reflectAsVec(line,retVec)
        reflectLine(line, retLine)   
        getNormalAsLine(retLine)
        mirrorLine(line,retLine) 
        mirrorVec(vec,retVec)
        setStartEndUnit(start,end) 
        centerOnStart()
        centerOnEnd() 
        centerOnVec(vec)
        rotate180OnStart()
        rotate180OnEnd()
        rotate90OnCenter() 
        rotate90OnStart()
        rotate90OnEnd() 
        rotate90OnUnit(unit)        
        rotateOnStart(rotation)  
        rotateOnEnd(rotation)
        rotateOnCenter(rotation) 
        rotateOnUnit(rotation,unit)
        rotateOnDist(rotation,dist) 
        slide(distance)
        slideUnit(unitDistance) 
        offset( distance )
        offsetUnit( unitDistance ) 
        scale(scale)
        translate(vec)
        rotate(rotation) 
        transform(transform)
    }
    Rectangle {
        top : undefined,
        aspect : 1,
        type : "Rectangle",
        _width : 0,
        _height : 0,
        copy()
        setAs(rectange)
        hasId(id) 
        isEmpty()
        toString(precision)
        empty()
        replace(id, prim)  
        width()
        height()
        setWidth(num)
        lerp(from, dest, amount)
        setHeight(num)
        topLine(line)
        leftLine(line)
        rightLine(line)
        bottomLine(line)
        heightVec(vec) 
        corners(vecArray) 
        asVecArray(vecArray, instance)
        asBox(box)
        asCircle(circle) 
        asInnerCircle(circle)
        asTriangles(diagonal,array) 
        asSimple(obj)
        fromSimple(obj)
        slice(x, y, rect)
        asArc(where,radius,arc)
        area()
        inflate(units)
        heightFromArea(area)
        widthFromArea(area)
        perimiter()
        diagonalLength()
        center(vec)
        setCenter(vec) 
        diagonalLine(line)
        setDiagonalLine(line)   
        bottomRight(vec)
        setBottomRight(vec) 
        setTopRight(vec)
        isRectangleTouching(rectangle)
        isRectangleInside(rectangle)
        isBoxInside(box) 
        isBoxTouching(box)  
        isCircleInside(circle)
        isCircleTouching(circle) 
        isArcTouching(arc)
        isArcInside(arc) 
        isPointInside(vec)
        isPointTouching(vec) 
        isLineInside(line)
        isLineTouching(line)  
        isTriangleInside(triangle)
        isTriangleTouching(triangle)
        setTransform :function (ctx)   
        setTransformArea(ctx, width, height)
        interceptingLineSeg(line, retLineSeg) 
        pointAt(point,vec)
        localPoint(vec,rVec) 
        scaleToFitIn(obj)
        scale(scale)
        translate(vec)
        rotate(rotation)
        transform(transform)
    }
    Box {
        top : 0,
        bottom : 0,
        left : 0,
        right : 0,
        type : "Box",
        copy()
        setAs(box)      
        asBox(box)
        asSimple(obj)
        fromSimple(obj)
        asVecArray(vecArray)          
        hasId(id) 
        lerp(from, dest, amount)
        isVecInside(vec)
        isPointInside(point)
        isVecArrayInside(vecArray)
        isLineInside(line)
        isRectangleInside(rectange)
        isCircleInside(circle)
        isBoxInside(box)
        isBoxTouching(box)
        isBoxOverlapping(box) 
        isLineTouching(Line)
        isArcTouching(arc) 
        isRectangleTouching(Rectange)
        isTriangleTouching(Triangle) 
        isBezierTouching(bezier)
        isInside(primitive)
        isEmpty()
        empty()
        toString(precision)   
        add(vec)
        pad(amount)        
        padWidth(amount) 
        padHeight(amount)
        min(width, height) 
        asRectangle(retRect)  
        center(vec) 
        normalise()
        max() 
        width()
        height() 
        irrate()        
        env(x, y)
        envBox(box)
        envelop(obj)
    }
    Bezier {
        p1 : undefined,
        p2 : undefined,
        cp1 : undefined,
        cp2 : undefined,
        type : "Bezier",
        _subStart : undefined, 
        _subEnd : undefined,
        copy()
        setAs(bezier)
        _setSpan(f,t) 
        getHash() 
        replace(id, prim)
        getAllIdsAsArray(array)
        empty()
        isEmpty()
        hasId(id)
        lerp(from, dest, amount)
        isQuadratic()
        isCubic() 
        description()
        leng()
        asVecArray(vecArray, instance)          
        asBox(box)  
        asSimple(obj)
        fromSimple(obj)
        interceptsAsVecArray(bezier,threshold,vecArray)
        interceptBezier_QonQ(bez1,vecArray) 
        interceptsAsPositions(bezier,threshold,array,array1)        
        lineInterceptPos(line) 
        interceptLine(line,vecArray)
        interceptLineSeg(line,vecArray) 
        sliceWithLine(line,right,primArray)
        asQuadratic()
        asCubic(extraVec)
        translate(vec) 
        scale(scale)
        rotate(rotation) 
        fromCircle(circle,quadrant)
        fromArc(arc) 
        fromVecArray(type,vecArray,instance)
        fromTriangle(triangle) 
        asRectangle(rectangle)
        fromBox(box) 
        segment(fromPos,toPos,retBezier)
        splitAt(position,start,retBezier) 
        normalise()
        reverse() 
        getLocalExtrema(axisX, solution)
        getLength()    
        getControlPoint(which)
        findPositionOfVec(vec,resolution,pos)  
        distFrom(vec)
        fitPointCenter(vec)  
        fitPointAt(pos,vec)
        vecAt(position,limit,vec) 
        unitAlong(unit,vec)
        length() 
        unitDistOfClosestPoint(vec)
        tangentAsVec( position,limit, retVec )  
        normalAsVec(position, limit, retVec) 
        normalAsLine(position, limit, retLine) 
        tangentAsLine(position, limit, retLine)
        snapToBezier(bez, fromStart, toStart , coplanar, equalScale) 
        snapToBezierPos(bez, pos , tangentAmount) 
        getInterpolationArray(resolution,array)
        approxLength(resolution)
    }
    Transform {
        xAxis : undefined,
        yAxis : undefined,
        origin : undefined,
        type:"Transform",
        copy()
        reset()
        toString(precision)
        setIdentity()
        hasId(id) 
        isEmpty()
        empty() 
        asVecArray(va, instance) 
        asArray(array) 
        asSimple(obj)
        fromSimple(obj)
        applyToCoordinate(x, y, point)
        applyToVec(vec)
        applyToLine(line)
        applyToRectangle(rectangle)
        applyToCircle(circle)
        applyToArc(arc) 
        applyToTriangle(triangle)
        applyToVecArray(vecArray)
        applyToPrimitiveArray(primitiveArray)
        fitRectange(rectangle,width,height) 
        fitLine(line,length,height)
        mirrorX() 
        mirrorY()
        mirrorXY() 
        rotate90 :function () 
        isometric()
        normalisePixelArea() 
        isIdentity()
        setFastlerp(from, dest) 
        fastLerp(amount)
        lerp(from, dest, amount)
        asInverseTransform(transform)
        invert: function () 
        determinant()
        mult(transform)
        rotate(angle)
        scaleUniform(scale)
        scaleAtPoint (scale,vec) 
        scale(scaleX,scaleY)
        scaleX(scaleX)
        scaleY(scaleY)
        shear(sx, sy)
        shearX(sx)
        shearY(sy)
        translate(x,y)
        translateX(x)
        translateY(y)
        setAs(transform)
        setContextTransform(ctx)
        multiplyContextTransform(ctx)
        setOrigin(vec)
        negateOrigin()
        setXAxis(vec)
        setYAxis(vec)
        setAxisAngles(angleX, angleY)
        setXAxisAngle(angle)
        setYAxisAngle(angle)
        skew() 
        setSkew(angle)   
        recompose(composit) 
        decomposeScale()
        decomposeType(type) 
        decompose()
        asSVG(svgMatrix)

    }





